/*
 * iDroit Dashboard Admin API
 *      これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import Group from './Group';

/**
 * The File model module.
 * @module model/File
 * @version 0.9.2
 */
export default class File {
  /**
   * Constructs a new <code>File</code>.
   * @alias module:model/File
   * @class
   * @param id {String} (必須) ファイルの識別子
   * @param filename {String} (任意) システム内で管理される際にシステムによって名付けられるユニークなファイル名
   * @param originalname {String} (必須) システムへアップロード時の元のファイル名
   * @param type {String} (必須) ファイル形式
   * @param fileData {String} (必須) ファイルのバイナリデータ
   * @param executed {Boolean} (任意) ファイルがCSVの場合、アカウントデータ生成実行に使用されたか。(true: 実行済み, false: 未使用)
   * @param status {Number} (必須) ファイルのステータス
   * @param group {Array.<module:model/Group>} (任意) ファイルを紐づけたグループの配列
   * @param createdBy {Object} (必須) ファイルをアップロードしたユーザーアカウント。
   * @param createdAt {String} (必須) ファイルの作成日時
   * @param updatedAt {String} (必須) グループの最終更新日時
   */
  constructor(id, filename, originalname, type, fileData, executed, status, group, createdBy, createdAt, updatedAt) {
    this.id = id;
    this.filename = filename;
    this.originalname = originalname;
    this.type = type;
    this.fileData = fileData;
    this.executed = executed;
    this.status = status;
    this.group = group;
    this.createdBy = createdBy;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  /**
   * Constructs a <code>File</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/File} obj Optional instance to populate.
   * @return {module:model/File} The populated <code>File</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new File();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('filename'))
        obj.filename = ApiClient.convertToType(data['filename'], 'String');
      if (data.hasOwnProperty('originalname'))
        obj.originalname = ApiClient.convertToType(data['originalname'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('fileData'))
        obj.fileData = ApiClient.convertToType(data['fileData'], 'String');
      if (data.hasOwnProperty('executed'))
        obj.executed = ApiClient.convertToType(data['executed'], 'Boolean');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'Number');
      if (data.hasOwnProperty('group'))
        obj.group = ApiClient.convertToType(data['group'], [Group]);
      if (data.hasOwnProperty('vcSchema'))
        obj.vcSchema = ApiClient.convertToType(data['vcSchema'], Object);
      if (data.hasOwnProperty('createdBy'))
        obj.createdBy = ApiClient.convertToType(data['createdBy'], Object);
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'String');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'String');
    }
    return obj;
  }
}

/**
 * (必須) ファイルの識別子
 * @member {String} id
 */
File.prototype.id = undefined;

/**
 * (任意) システム内で管理される際にシステムによって名付けられるユニークなファイル名
 * @member {String} filename
 */
File.prototype.filename = undefined;

/**
 * (必須) システムへアップロード時の元のファイル名
 * @member {String} originalname
 */
File.prototype.originalname = undefined;

/**
 * (必須) ファイル形式
 * @member {String} type
 */
File.prototype.type = undefined;

/**
 * (必須) ファイルのバイナリデータ
 * @member {String} fileData
 */
File.prototype.fileData = undefined;

/**
 * (任意) ファイルがCSVの場合、アカウントデータ生成実行に使用されたか。(true: 実行済み, false: 未使用)
 * @member {Boolean} executed
 */
File.prototype.executed = undefined;

/**
 * (必須) ファイルのステータス
 * @member {Number} status
 */
File.prototype.status = undefined;

/**
 * (任意) ファイルを紐づけたグループの配列
 * @member {Array.<module:model/Group>} group
 */
File.prototype.group = undefined;

/**
 * (任意) ファイルに紐づいたVCスキーマ
 * @member {Object} vcSchema
 */
File.prototype.vcSchema = undefined;

/**
 * (必須) ファイルをアップロードしたユーザーアカウント。
 * @member {Object} createdBy
 */
File.prototype.createdBy = undefined;

/**
 * (必須) ファイルの作成日時
 * @member {String} createdAt
 */
File.prototype.createdAt = undefined;

/**
 * (必須) グループの最終更新日時
 * @member {String} updatedAt
 */
File.prototype.updatedAt = undefined;

