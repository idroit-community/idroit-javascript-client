/*
 * iDroit Dashboard Admin API
 *      これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The Verification model module.
 * @module model/Verification
 * @version 0.9.2
 */
export default class Verification {
  /**
   * Constructs a new <code>Verification</code>.
   * @alias module:model/Verification
   * @class
   * @param id {String} (必須) 検証結果の識別子
   * @param label {String} (必須) 検証結果の識別や整理などの管理するにあったてメタデータとして任意で設定可能な単語のフレーズ。(例: verify-for-check)
   * @param result {Boolean} (必須) VC/VPの検証結果(true: 検証に成功, false: 検証に失敗)
   * @param createdBy {Object} (任意) 検証結果を作成したユーザーアカウント
   * @param createdAt {String} (必須) 検証実行時の日時
   * @param updatedAt {String} (必須) 検証結果の最終更新日
   */
  constructor(id, label, result, createdBy, createdAt, updatedAt) {
    this.id = id;
    this.label = label;
    this.result = result;
    this.createdBy = createdBy;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  /**
   * Constructs a <code>Verification</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Verification} obj Optional instance to populate.
   * @return {module:model/Verification} The populated <code>Verification</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Verification();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('label'))
        obj.label = ApiClient.convertToType(data['label'], 'String');
      if (data.hasOwnProperty('result'))
        obj.result = ApiClient.convertToType(data['result'], 'Boolean');
      if (data.hasOwnProperty('createdBy'))
        obj.createdBy = ApiClient.convertToType(data['createdBy'], Object);
      if (data.hasOwnProperty('vcInfo'))
        obj.vcInfo = ApiClient.convertToType(data['vcInfo'], Object);
      if (data.hasOwnProperty('vpInfo'))
        obj.vpInfo = ApiClient.convertToType(data['vpInfo'], Object);
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'String');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'String');
    }
    return obj;
  }
}

/**
 * (必須) 検証結果の識別子
 * @member {String} id
 */
Verification.prototype.id = undefined;

/**
 * (必須) 検証結果の識別や整理などの管理するにあったてメタデータとして任意で設定可能な単語のフレーズ。(例: verify-for-check)
 * @member {String} label
 */
Verification.prototype.label = undefined;

/**
 * (必須) VC/VPの検証結果(true: 検証に成功, false: 検証に失敗)
 * @member {Boolean} result
 */
Verification.prototype.result = undefined;

/**
 * (任意) 検証結果を作成したユーザーアカウント
 * @member {Object} createdBy
 */
Verification.prototype.createdBy = undefined;

/**
 * (任意) 検証を実行したVC情報の識別子
 * @member {Object} vcInfo
 */
Verification.prototype.vcInfo = undefined;

/**
 * (任意) 検証を実行したVP情報の識別子
 * @member {Object} vpInfo
 */
Verification.prototype.vpInfo = undefined;

/**
 * (必須) 検証実行時の日時
 * @member {String} createdAt
 */
Verification.prototype.createdAt = undefined;

/**
 * (必須) 検証結果の最終更新日
 * @member {String} updatedAt
 */
Verification.prototype.updatedAt = undefined;

