/*
 * iDroit Dashboard Admin API
 *      これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import Group from './Group';
import VcInfo from './VcInfo';
import Verification from './Verification';

/**
 * The VpInfo model module.
 * @module model/VpInfo
 * @version 0.9.2
 */
export default class VpInfo {
  /**
   * Constructs a new <code>VpInfo</code>.
   * @alias module:model/VpInfo
   * @class
   * @param id {String} (必須) VP情報の識別子
   * @param raw {String} (必須) VPのバイナリデータ
   * @param createdBy {Object} (任意) VP情報を生成したユーザーアカウント
   * @param createdAt {String} (必須) VP情報の作成日時
   * @param updatedAt {String} (必須) VP情報の更新日時
   */
  constructor(id, raw, createdBy, createdAt, updatedAt) {
    this.id = id;
    this.raw = raw;
    this.createdBy = createdBy;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  /**
   * Constructs a <code>VpInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/VpInfo} obj Optional instance to populate.
   * @return {module:model/VpInfo} The populated <code>VpInfo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new VpInfo();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('label'))
        obj.label = ApiClient.convertToType(data['label'], 'String');
      if (data.hasOwnProperty('hash'))
        obj.hash = ApiClient.convertToType(data['hash'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('raw'))
        obj.raw = ApiClient.convertToType(data['raw'], 'String');
      if (data.hasOwnProperty('createdBy'))
        obj.createdBy = ApiClient.convertToType(data['createdBy'], Object);
      if (data.hasOwnProperty('user'))
        obj.user = ApiClient.convertToType(data['user'], Object);
      if (data.hasOwnProperty('vcInfos'))
        obj.vcInfos = ApiClient.convertToType(data['vcInfos'], [VcInfo]);
      if (data.hasOwnProperty('groups'))
        obj.groups = ApiClient.convertToType(data['groups'], [Group]);
      if (data.hasOwnProperty('didInfo'))
        obj.didInfo = ApiClient.convertToType(data['didInfo'], Object);
      if (data.hasOwnProperty('verifications'))
        obj.verifications = ApiClient.convertToType(data['verifications'], [Verification]);
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'String');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'String');
    }
    return obj;
  }
}

/**
 * (必須) VP情報の識別子
 * @member {String} id
 */
VpInfo.prototype.id = undefined;

/**
 * (任意) VPの識別や整理などの管理するにあったてメタデータとして任意で設定可能な単語のフレーズ
 * @member {String} label
 */
VpInfo.prototype.label = undefined;

/**
 * (必須) VPのハッシュ値。VPの保管における識別子として用いる。
 * @member {String} hash
 */
VpInfo.prototype.hash = undefined;

/**
 * (任意) VCの発行目的や用途など任意で設定可能な説明文。
 * @member {String} description
 */
VpInfo.prototype.description = undefined;

/**
 * (必須) VPのバイナリデータ
 * @member {String} raw
 */
VpInfo.prototype.raw = undefined;

/**
 * (任意) VP情報を生成したユーザーアカウント
 * @member {Object} createdBy
 */
VpInfo.prototype.createdBy = undefined;

/**
 * (任意) VP情報と紐付いたアカウント
 * @member {Object} user
 */
VpInfo.prototype.user = undefined;

/**
 * (任意) VPを生成する元となるVC情報
 * @member {Array.<module:model/VcInfo>} vcInfos
 */
VpInfo.prototype.vcInfos = undefined;

/**
 * (任意) VP情報に紐づいたグループの配列
 * @member {Array.<module:model/Group>} groups
 */
VpInfo.prototype.groups = undefined;

/**
 * (任意) VP生成時の署名に用いるDID情報の識別子
 * @member {Object} didInfo
 */
VpInfo.prototype.didInfo = undefined;

/**
 * (任意) VPの検証結果
 * @member {Array.<module:model/Verification>} verifications
 */
VpInfo.prototype.verifications = undefined;

/**
 * (必須) VP情報の作成日時
 * @member {String} createdAt
 */
VpInfo.prototype.createdAt = undefined;

/**
 * (必須) VP情報の更新日時
 * @member {String} updatedAt
 */
VpInfo.prototype.updatedAt = undefined;

