/*
 * iDroit Dashboard Admin API
 *      これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The SendMailBatchDto model module.
 * @module model/SendMailBatchDto
 * @version 0.9.2
 */
export default class SendMailBatchDto {
  /**
   * Constructs a new <code>SendMailBatchDto</code>.
   * @alias module:model/SendMailBatchDto
   * @class
   * @param title {String} (必須) メールの件名
   * @param forEveryClient {Boolean} (必須) 全てのクライアントアカウントに対して送信するか (true: 全てのクライアントアカウントに送信, false: 全てのクライアントアカウントに送信しない)
   * @param forEveryUser {Boolean} (必須) 全てのユーザーアカウントに対して送信するか (true: 全てのユーザーアカウントに送信, false: 全てのユーザーアカウントに送信しない)
   * @param content {String} (必須) メールの内容
   */
  constructor(title, forEveryClient, forEveryUser, content) {
    this.title = title;
    this.forEveryClient = forEveryClient;
    this.forEveryUser = forEveryUser;
    this.content = content;
  }

  /**
   * Constructs a <code>SendMailBatchDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SendMailBatchDto} obj Optional instance to populate.
   * @return {module:model/SendMailBatchDto} The populated <code>SendMailBatchDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SendMailBatchDto();
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('forEveryClient'))
        obj.forEveryClient = ApiClient.convertToType(data['forEveryClient'], 'Boolean');
      if (data.hasOwnProperty('forEveryUser'))
        obj.forEveryUser = ApiClient.convertToType(data['forEveryUser'], 'Boolean');
      if (data.hasOwnProperty('userIds'))
        obj.userIds = ApiClient.convertToType(data['userIds'], ['String']);
      if (data.hasOwnProperty('groupIds'))
        obj.groupIds = ApiClient.convertToType(data['groupIds'], ['String']);
      if (data.hasOwnProperty('content'))
        obj.content = ApiClient.convertToType(data['content'], 'String');
    }
    return obj;
  }
}

/**
 * (必須) メールの件名
 * @member {String} title
 */
SendMailBatchDto.prototype.title = undefined;

/**
 * (必須) 全てのクライアントアカウントに対して送信するか (true: 全てのクライアントアカウントに送信, false: 全てのクライアントアカウントに送信しない)
 * @member {Boolean} forEveryClient
 */
SendMailBatchDto.prototype.forEveryClient = undefined;

/**
 * (必須) 全てのユーザーアカウントに対して送信するか (true: 全てのユーザーアカウントに送信, false: 全てのユーザーアカウントに送信しない)
 * @member {Boolean} forEveryUser
 */
SendMailBatchDto.prototype.forEveryUser = undefined;

/**
 * (任意) メールの送信対象のユーザーアカウント識別子の配列
 * @member {Array.<String>} userIds
 */
SendMailBatchDto.prototype.userIds = undefined;

/**
 * (任意) 送信対象のグループ識別子の配列。グループを指定した場合グループに紐付くユーザーアカウントとクライアントアカウント全てにメールが送信される
 * @member {Array.<String>} groupIds
 */
SendMailBatchDto.prototype.groupIds = undefined;

/**
 * (必須) メールの内容
 * @member {String} content
 */
SendMailBatchDto.prototype.content = undefined;

