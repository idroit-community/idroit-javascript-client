/*
 * iDroit Dashboard Admin API
 *      これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import VcSchemaProperty from './VcSchemaProperty';

/**
 * The CreateVcSchemaDto model module.
 * @module model/CreateVcSchemaDto
 * @version 0.9.2
 */
export default class CreateVcSchemaDto {
  /**
   * Constructs a new <code>CreateVcSchemaDto</code>.
   * @alias module:model/CreateVcSchemaDto
   * @class
   * @param title {String} (必須) 新規生成するVCスキーマのタイトル
   * @param version {String} (必須) VCスキーマのバージョン(デフォルト: 1.0.0)
   * @param isBadgeSchema {Boolean} (任意) このスキーマがバッジのスキーマか否か(デフォルト: false)
   * @param fileId {String} (任意) バッジの画像のファイル識別子。'`isBadgeSchema`プロパティが`true`であり、バッジスキーマとして利用する場合は必須のパラメータ。
   * @param propArray {Array.<module:model/VcSchemaProperty>} (必須) VCのスキーマの各項目における項目名と項目型のオブジェクトの配列
   */
  constructor(title, version, isBadgeSchema, fileId, propArray) {
    this.title = title;
    this.version = version;
    this.isBadgeSchema = isBadgeSchema;
    this.fileId = fileId;
    this.propArray = propArray;
  }

  /**
   * Constructs a <code>CreateVcSchemaDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateVcSchemaDto} obj Optional instance to populate.
   * @return {module:model/CreateVcSchemaDto} The populated <code>CreateVcSchemaDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CreateVcSchemaDto();
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('version'))
        obj.version = ApiClient.convertToType(data['version'], 'String');
      if (data.hasOwnProperty('contexts'))
        obj.contexts = ApiClient.convertToType(data['contexts'], ['String']);
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('isBadgeSchema'))
        obj.isBadgeSchema = ApiClient.convertToType(data['isBadgeSchema'], 'Boolean');
      if (data.hasOwnProperty('fileId'))
        obj.fileId = ApiClient.convertToType(data['fileId'], 'String');
      if (data.hasOwnProperty('propArray'))
        obj.propArray = ApiClient.convertToType(data['propArray'], [VcSchemaProperty]);
    }
    return obj;
  }
}

/**
 * (必須) 新規生成するVCスキーマのタイトル
 * @member {String} title
 */
CreateVcSchemaDto.prototype.title = undefined;

/**
 * (必須) VCスキーマのバージョン(デフォルト: 1.0.0)
 * @member {String} version
 */
CreateVcSchemaDto.prototype.version = undefined;

/**
 * (任意) VCスキーマに設定する@context文字列の配列
 * @member {Array.<String>} contexts
 */
CreateVcSchemaDto.prototype.contexts = undefined;

/**
 * (任意) VCスキーマの説明文
 * @member {String} description
 */
CreateVcSchemaDto.prototype.description = undefined;

/**
 * (任意) このスキーマがバッジのスキーマか否か(デフォルト: false)
 * @member {Boolean} isBadgeSchema
 */
CreateVcSchemaDto.prototype.isBadgeSchema = undefined;

/**
 * (任意) バッジの画像のファイル識別子。'`isBadgeSchema`プロパティが`true`であり、バッジスキーマとして利用する場合は必須のパラメータ。
 * @member {String} fileId
 */
CreateVcSchemaDto.prototype.fileId = undefined;

/**
 * (必須) VCのスキーマの各項目における項目名と項目型のオブジェクトの配列
 * @member {Array.<module:model/VcSchemaProperty>} propArray
 */
CreateVcSchemaDto.prototype.propArray = undefined;

