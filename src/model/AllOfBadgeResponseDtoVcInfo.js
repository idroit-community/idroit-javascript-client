/*
 * iDroit Dashboard Admin API
 *      これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import Group from './Group';
import VcInfo from './VcInfo';
import Verification from './Verification';
import VpInfo from './VpInfo';

/**
 * The AllOfBadgeResponseDtoVcInfo model module.
 * @module model/AllOfBadgeResponseDtoVcInfo
 * @version 0.9.2
 */
export default class AllOfBadgeResponseDtoVcInfo extends VcInfo {
  /**
   * Constructs a new <code>AllOfBadgeResponseDtoVcInfo</code>.
   * バッジに紐付いたVC情報の配列
   * @alias module:model/AllOfBadgeResponseDtoVcInfo
   * @class
   * @extends module:model/VcInfo
   * @param id {} (必須) VC情報の識別子
   * @param label {} (任意) VCの識別や整理などの管理するにあったてメタデータとして任意で設定可能な単語のフレーズ。(例: vc-for-project1)
   * @param hash {} (必須) VCのハッシュ値。VCの保管における識別子として用いる。
   * @param description {} (任意) VCの発行目的や用途など任意で設定可能な説明文。
   * @param createdBy {} (任意) VC情報を生成したユーザーアカウント
   * @param createdAt {} (必須) VC情報の作成日時
   * @param updatedAt {} (必須) VC情報の更新日時
   */
  constructor(id, label, hash, description, createdBy, createdAt, updatedAt) {
    super(id, label, hash, description, createdBy, createdAt, updatedAt);
  }

  /**
   * Constructs a <code>AllOfBadgeResponseDtoVcInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AllOfBadgeResponseDtoVcInfo} obj Optional instance to populate.
   * @return {module:model/AllOfBadgeResponseDtoVcInfo} The populated <code>AllOfBadgeResponseDtoVcInfo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AllOfBadgeResponseDtoVcInfo();
      VcInfo.constructFromObject(data, obj);
    }
    return obj;
  }
}
