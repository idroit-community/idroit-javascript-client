/*
 * iDroit Dashboard Admin API
 *      これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The GetProfileResponseDto model module.
 * @module model/GetProfileResponseDto
 * @version 0.9.2
 */
export default class GetProfileResponseDto {
  /**
   * Constructs a new <code>GetProfileResponseDto</code>.
   * @alias module:model/GetProfileResponseDto
   * @class
   * @param userId {String} アカウントの識別子
   * @param name {String} アカウントの名前
   * @param email {String} アカウントのメールアドレス
   * @param role {module:model/GetProfileResponseDto.RoleEnum} アカウントロール(\"admin\", \"user\", \"client\")
   * @param iat {Number} JWTが発行された日時
   * @param exp {Number} JWTが失効する日時
   */
  constructor(userId, name, email, role, iat, exp) {
    this.userId = userId;
    this.name = name;
    this.email = email;
    this.role = role;
    this.iat = iat;
    this.exp = exp;
  }

  /**
   * Constructs a <code>GetProfileResponseDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetProfileResponseDto} obj Optional instance to populate.
   * @return {module:model/GetProfileResponseDto} The populated <code>GetProfileResponseDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new GetProfileResponseDto();
      if (data.hasOwnProperty('userId'))
        obj.userId = ApiClient.convertToType(data['userId'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('role'))
        obj.role = ApiClient.convertToType(data['role'], 'String');
      if (data.hasOwnProperty('iat'))
        obj.iat = ApiClient.convertToType(data['iat'], 'Number');
      if (data.hasOwnProperty('exp'))
        obj.exp = ApiClient.convertToType(data['exp'], 'Number');
    }
    return obj;
  }
}

/**
 * アカウントの識別子
 * @member {String} userId
 */
GetProfileResponseDto.prototype.userId = undefined;

/**
 * アカウントの名前
 * @member {String} name
 */
GetProfileResponseDto.prototype.name = undefined;

/**
 * アカウントのメールアドレス
 * @member {String} email
 */
GetProfileResponseDto.prototype.email = undefined;

/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
GetProfileResponseDto.RoleEnum = {
  /**
   * value: "admin"
   * @const
   */
  admin: "admin",

  /**
   * value: "user"
   * @const
   */
  user: "user",

  /**
   * value: "client"
   * @const
   */
  client: "client"
};
/**
 * アカウントロール(\"admin\", \"user\", \"client\")
 * @member {module:model/GetProfileResponseDto.RoleEnum} role
 */
GetProfileResponseDto.prototype.role = undefined;

/**
 * JWTが発行された日時
 * @member {Number} iat
 */
GetProfileResponseDto.prototype.iat = undefined;

/**
 * JWTが失効する日時
 * @member {Number} exp
 */
GetProfileResponseDto.prototype.exp = undefined;

