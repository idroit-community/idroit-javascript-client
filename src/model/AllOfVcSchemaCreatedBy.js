/*
 * iDroit Dashboard Admin API
 *      これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import DidInfo from './DidInfo';
import Group from './Group';
import Mail from './Mail';
import User from './User';
import UserToken from './UserToken';
import VcInfo from './VcInfo';
import VcSchema from './VcSchema';
import Verification from './Verification';
import VpInfo from './VpInfo';

/**
 * The AllOfVcSchemaCreatedBy model module.
 * @module model/AllOfVcSchemaCreatedBy
 * @version 0.9.2
 */
export default class AllOfVcSchemaCreatedBy extends User {
  /**
   * Constructs a new <code>AllOfVcSchemaCreatedBy</code>.
   * (必須) VCスキーマを作成したユーザーアカウント。
   * @alias module:model/AllOfVcSchemaCreatedBy
   * @class
   * @extends module:model/User
   * @param id {} アカウントの識別子
   * @param name {} アカウントの名前
   * @param email {} アカウントのメールアドレス
   * @param password {} アカウントのパスワード(8文字以上20字未満)
   * @param needActivateFlow {} (必須: {default: false}) アカウントの有効化フローが必要か否か(true: 必要 /false: 不要)
   * @param status {} ユーザーのアカウントステータス
   * @param role {} アカウントのロール(admin/user/clinet)
   * @param userTokens {} (任意) ユーザーアカウントがアップロードしたファイルの配列。
   * @param createdVcSchemas {} (任意) ユーザーアカウントが作成したVCスキーマの配列。
   * @param createdVerifications {} (任意) ユーザーアカウントが実行した検証結果の配列。
   * @param createdFiles {} (任意) ユーザーアカウントがアップロードしたファイルの配列。
   * @param createdAt {} ユーザーアカウントの作成日時
   * @param updatedAt {} ユーザーアカウントの更新日時
   */
  constructor(id, name, email, password, needActivateFlow, status, role, userTokens, createdVcSchemas, createdVerifications, createdFiles, createdAt, updatedAt) {
    super(id, name, email, password, needActivateFlow, status, role, userTokens, createdVcSchemas, createdVerifications, createdFiles, createdAt, updatedAt);
  }

  /**
   * Constructs a <code>AllOfVcSchemaCreatedBy</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AllOfVcSchemaCreatedBy} obj Optional instance to populate.
   * @return {module:model/AllOfVcSchemaCreatedBy} The populated <code>AllOfVcSchemaCreatedBy</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AllOfVcSchemaCreatedBy();
      User.constructFromObject(data, obj);
    }
    return obj;
  }
}
