/*
 * iDroit Dashboard Admin API
 *      これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   
 *
 * OpenAPI spec version: 0.9.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The CreateVcInfoDto model module.
 * @module model/CreateVcInfoDto
 * @version 0.9.2
 */
export default class CreateVcInfoDto {
  /**
   * Constructs a new <code>CreateVcInfoDto</code>.
   * @alias module:model/CreateVcInfoDto
   * @class
   * @param issuer {String} (必須) VCの発行者の識別子として用いる文字列の値。現在はDIDのみがサポートされていますが、今後のアップデートでDID以外の文字列をサポートする予定です。
   * @param vcSchemaId {String} (必須) 新規発行するVCの元となるVCスキーマの識別子
   * @param credentialSubject {Object} (必須) VCの主張内容(クレーム)となる値のオブジェクト型の値
   */
  constructor(issuer, vcSchemaId, credentialSubject) {
    this.issuer = issuer;
    this.vcSchemaId = vcSchemaId;
    this.credentialSubject = credentialSubject;
  }

  /**
   * Constructs a <code>CreateVcInfoDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateVcInfoDto} obj Optional instance to populate.
   * @return {module:model/CreateVcInfoDto} The populated <code>CreateVcInfoDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CreateVcInfoDto();
      if (data.hasOwnProperty('issuer'))
        obj.issuer = ApiClient.convertToType(data['issuer'], 'String');
      if (data.hasOwnProperty('vcSchemaId'))
        obj.vcSchemaId = ApiClient.convertToType(data['vcSchemaId'], 'String');
      if (data.hasOwnProperty('credentialSubject'))
        obj.credentialSubject = ApiClient.convertToType(data['credentialSubject'], Object);
      if (data.hasOwnProperty('label'))
        obj.label = ApiClient.convertToType(data['label'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
    }
    return obj;
  }
}

/**
 * (必須) VCの発行者の識別子として用いる文字列の値。現在はDIDのみがサポートされていますが、今後のアップデートでDID以外の文字列をサポートする予定です。
 * @member {String} issuer
 */
CreateVcInfoDto.prototype.issuer = undefined;

/**
 * (必須) 新規発行するVCの元となるVCスキーマの識別子
 * @member {String} vcSchemaId
 */
CreateVcInfoDto.prototype.vcSchemaId = undefined;

/**
 * (必須) VCの主張内容(クレーム)となる値のオブジェクト型の値
 * @member {Object} credentialSubject
 */
CreateVcInfoDto.prototype.credentialSubject = undefined;

/**
 * (任意) VCの識別や整理などの管理するにあったてメタデータとして任意で設定可能な単語のフレーズ。(例: vc-for-project1)
 * @member {String} label
 */
CreateVcInfoDto.prototype.label = undefined;

/**
 * (任意) VCの発行目的や用途など任意で設定可能な説明文
 * @member {String} description
 */
CreateVcInfoDto.prototype.description = undefined;

